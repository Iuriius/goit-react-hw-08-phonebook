{"version":3,"file":"static/js/834.059719c5.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContact, selectFilter],\n  (users, filter) => {\n    return filter\n      ? users.filter(item =>\n          item.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : users;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  color: darkorchid;\n  text-shadow: 1px 1px 1px pink;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  width: 320px;\n  padding: 5px;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid pink;\n  box-shadow: rebeccapurple 1px 3px 3px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  color: snow;\n  text-shadow: darkslateblue 1px 1px 1px;\n  width: 150px;\n  line-height: 1.5rem;\n  background: pink;\n  border: none;\n  border-radius: 7px;\n  box-shadow: rebeccapurple 2px 2px 2px;\n  cursor: pointer;\n  transition: all 150ms ease 0s;\n\n  &:hover,\n  &:focus {\n    background: blueviolet;\n    box-shadow: 2px 5px 5px darkorchid;\n  }\n`;\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import toast, { Toaster } from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContact } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input, Button, FormContainer } from './Form.styled';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const form = event.target;\n    const { name, number } = Object.fromEntries(formData);\n\n    if (contacts.some(item => item.name === name)) {\n      return toast.error(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit} autoComplete=\"off\">\n      <div>\n        <Toaster />\n      </div>\n      <div>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter number 000-00-00\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n      </div>\n      <Button type=\"submit\">Add new contact</Button>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  color: darkorchid;\n  text-shadow: 1px 1px 1px pink;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  width: 320px;\n  padding: 5px;\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid pink;\n  box-shadow: rebeccapurple 1px 3px 3px;\n  outline: none;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { filterContacts } from '../../redux/filter/filter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterChange = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input onChange={filterChange} type=\"text\" placeholder=\"Enter name\" />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  filterChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactUl = styled.ul`\n  margin-top: 20px;\n  padding: 0;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin: 5px;\n  color: snow;\n  text-shadow: darkslateblue 1px 1px 1px;\n  width: 70px;\n  line-height: 1.5rem;\n  background: pink;\n  border: none;\n  border-radius: 7px;\n  box-shadow: rebeccapurple 2px 2px 2px;\n  cursor: pointer;\n  transition: all 150ms ease 0s;\n\n  &:hover,\n  &:focus {\n    background: blueviolet;\n    box-shadow: 2px 5px 5px darkorchid;\n  }\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-size: larger;\n  color: darkorchid;\n  text-shadow: 1px 1px 0px lightgrey;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-left: 15px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n} from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {contacts.length &&\n        contacts.map(contact => (\n          <ContactItem key={contact.id}>\n            <ContactName>\n              {contact.name}:<ContactNumber>{contact.number}</ContactNumber>\n            </ContactName>\n            <Button\n              type=\"button\"\n              onClick={() => handleDeleteContact(contact.id)}\n            >\n              Delete\n            </Button>\n          </ContactItem>\n        ))}\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n};\n","import { useSelector } from 'react-redux';\nimport { ContactUl } from './ContactsList.styled';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\n\nexport const ContactsList = () => {\n  const contactsList = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactUl>\n      <ContactsListItem contacts={contactsList} />\n    </ContactUl>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Form } from '../components/Form/Form';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport {\n  selectContact,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContact);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const toggle = () => {\n    setIsActive(prev => !prev);\n  };\n  return (\n    <div className=\"cont-wrap\">\n      <h2 style={{ color: 'darkorchid' }}>Phonebook</h2>\n      <Form />\n      {isLoading && !error && <b>Please wait...</b>}\n      {contacts.length > 0 && (\n        <>\n          <h2 className={isActive ? 'text' : 'text-is-active'}>Contacts</h2>\n          <button onClick={toggle}>TOGGLE</button>\n          <Filter />\n          <ContactsList />\n        </>\n      )}\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContact","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","users","item","toLowerCase","includes","Label","styled","Input","Button","FormContainer","Form","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","formData","FormData","target","form","fromEntries","number","some","toast","addContact","reset","autoComplete","type","placeholder","pattern","title","required","Filter","onChange","filterContacts","ContactUl","ContactName","ContactNumber","ContactItem","ContactsListItem","contact","onClick","id","deleteContact","ContactsList","contactsList","useState","isActive","setIsActive","useEffect","fetchContacts","className","style","color"],"sourceRoot":""}